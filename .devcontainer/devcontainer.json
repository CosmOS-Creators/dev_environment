// For format details, see https://aka.ms/devcontainer.json. For config options, see the README at:
// https://github.com/microsoft/vscode-dev-containers/tree/v0.202.5/containers/alpine
{
    "name": "CosmOS workspace",
    // "build": {
    // 	"dockerfile": "Dockerfile",
    // 	"cacheFrom": "florianl21/cosmos-workspace:latest",
    // 	// Update 'VARIANT' to pick an Alpine version: 3.11, 3.12, 3.13, 3.14
    // 	"args": { "VARIANT": "3.14" }
    // },
    // Set *default* container specific settings.json values on container create.
    "settings": {},
    // "image": "florianl21/cosmos-workspace:latest",
    // Option 1, use no docker compose file:
    // "containerEnv": {
    //     "DISPLAY": ":0"
    // },
    // "workspaceMount": "source=cosmos_codebase,target=/workspace,type=volume",
    // "workspaceFolder": "/workspace",
    // "mounts": [
    // "source=X11,target=/tmp/.X11-unix,type=volume",
    // "source=\\\\wsl.localhost\\Ubuntu-20.04\\mnt\\wslg\\.X11-uni,target=/tmp/.X11-unix,type=bind",
    // ],
    // Option 2, use docker compose file:
    "dockerComposeFile": "dev_container_GUI.yaml", // use this if you want GUI support for development
    // "dockerComposeFile": "dev_container.yaml", // use this if you don't want or cannot use WSLg
    "workspaceFolder": "/workspace",
    "service": "cosmos",
    // Add the IDs of extensions you want installed when the container is created.
    // Note that some extensions may not work in Alpine Linux. See https://aka.ms/vscode-remote/linux.
    "extensions": [
		"ms-python.python",
		"ms-python.vscode-pylance",
		"seanwu.vscode-qt-for-python",
		"twxs.cmake",
		"ms-vscode.cmake-tools",
		"ms-vscode.cpptools",
		"cschlosser.doxdocgen",
		"xaver.clang-format",
		"lextudio.restructuredtext",
		"trond-snekvik.simple-rst",
		"streetsidesoftware.code-spell-checker"
	],
    // Use 'forwardPorts' to make a list of ports inside the container available locally.
    // "forwardPorts": [],
    // Use 'postCreateCommand' to run commands after the container is created.
    // "postCreateCommand": "uname -a",
    // Replace when using a ptrace-based debugger like C++, Go, and Rust
    // "runArgs": [ "--init", "--cap-add=SYS_PTRACE", "--security-opt", "seccomp=unconfined" ],
    // "runArgs": ["--init", "-e DISPLAY"],
    // Comment out connect as root instead. More info: https://aka.ms/vscode-remote/containers/non-root.
    // "remoteUser": "vscode"
}
